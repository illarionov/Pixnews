name: CI

on:
  pull_request:
    paths-ignore:
      - '**/*.md'
  push:
    paths-ignore:
      - '**/*.md'

concurrency:
  group: ${{ github.ref }}
  cancel-in-progress: ${{ github.ref != 'refs/heads/master' }}

env:
  CI: true
  TERM: dumb
  GRADLE_OPTS: >
    -Dorg.gradle.jvmargs="-Xmx1g -XX:MaxMetaspaceSize=1g -XX:+HeapDumpOnOutOfMemoryError -XX:+UseG1GC"
    -Dorg.gradle.parallel=true
    -Dorg.gradle.workers.max=2
    -Dorg.gradle.vfs.watch=false
    -Dorg.gradle.dependency.verification.console=verbose
    -Dkotlin.incremental=false
    -Dkotlin.compiler.execution.strategy=in-process
    -DwarningsAsErrors=false

jobs:
  assemble:
    name: Assemble release
    runs-on: self-hosted
    timeout-minutes: 60
    if: ${{ !contains(github.event.head_commit.message, '[ci skip]') }}

    steps:
      - name: Checkout sources
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Validate Gradle wrapper
        uses: gradle/wrapper-validation-action@v1

      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '19'

      - name: Assemble release build
        uses: gradle/gradle-build-action@v2
        with:
          arguments: assembleRelease --stacktrace

      - name: Upload build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: build-outputs
          path: app/build/outputs

  static-analysis:
    name: Static analysis
    runs-on: self-hosted
    timeout-minutes: 60
    if: ${{ !contains(github.event.head_commit.message, '[ci skip]') }}

    steps:
      - name: Checkout sources
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Validate Gradle wrapper
        uses: gradle/wrapper-validation-action@v1

      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '19'

      - name: Run Android Lint
        uses: gradle/gradle-build-action@v2
        with:
          arguments: app:lintRelease

      - name: Upload lint outputs
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: lint-outputs
          path: app/build/outputs

  unit-tests:
    name: Unit tests
    runs-on: self-hosted
    timeout-minutes: 60
    if: ${{ !contains(github.event.head_commit.message, '[ci skip]') }}

    steps:
      - name: Checkout sources
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Validate Gradle wrapper
        uses: gradle/wrapper-validation-action@v1

      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '19'

      - name: Run unit tests
        uses: gradle/gradle-build-action@v2
        with:
          arguments: test

      - name: Publish test results
        uses: EnricoMi/publish-unit-test-result-action@v2
        if: always()
        with:
          junit_files: '*/build/test-results/**/*.xml'

      - name: Bundle the build report
        run: find . -type d -name 'reports' | zip -@ -r build-reports.zip

      - name: Upload test results
        uses: actions/upload-artifact@v3
        with:
          name: test-results
          path: build-reports.zip

  instrumented-tests:
    name: Instrumented tests
    runs-on: [self-hosted, ui]
    timeout-minutes: 60
    if: ${{ !contains(github.event.head_commit.message, '[ci skip]') }}

    steps:
      - name: Checkout sources
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Validate Gradle wrapper
        uses: gradle/wrapper-validation-action@v1

      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '19'

      - name: Run instrumented tests
        uses: gradle/gradle-build-action@v2
        with:
          arguments: |
            -Pandroid.testoptions.manageddevices.emulator.gpu=swiftshader_indirect
            phoneGroupDebugAndroidTest
            --continue
            --info

      - name: Publish instrumented test results
        uses: EnricoMi/publish-unit-test-result-action@v2
        if: always()
        with:
          junit_files: '*/build/reports/androidTests/**/*.xml'

      - name: Upload test reports
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: test-reports-${{ matrix.api-level }}
          path: '*/build/reports/androidTests'
